<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:oxm="http://www.springframework.org/schema/oxm"
	xmlns:camel="http://camel.apache.org/schema/spring"
	xsi:schemaLocation="http://www.springframework.org/schema/oxm
         http://www.springframework.org/schema/oxm/spring-oxm.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

	<oxm:jaxb2-marshaller id="jaxbMarshallerBean">
		<oxm:class-to-be-bound
			name="th.co.toyota.st3.batch.config.jaxb.ReceivingConfig" />
	</oxm:jaxb2-marshaller>

	<!-- import the dataSource definition -->
	<import resource="datasource-config-test.xml" />

	<!-- enables scanning for @Transactional annotations -->
	<tx:annotation-driven />
	<!-- JPA EntityManagerFactory -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		p:dataSource-ref="dataSource">
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
				p:database="${jpa.database}" p:showSql="${jpa.showSql}" />
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
			</props>
		</property>
		<!-- BOTH Persistence Unit and Packages to Scan are NOT compatible, persistenceUnit 
			will win -->
		<property name="persistenceUnitName" value="bw0main" />

		<property name="packagesToScan">
			<list>
				<value>th.co.toyota.st3.api.model</value>
				<value>th.co.toyota.bw0.api.model.common</value>
				<value>th.co.toyota.bw0.api.model.batch</value>
				<value>th.co.toyota.bw0.api.model.report</value>
			</list>
		</property>	
	</bean>

	<bean id="entityManagerFactory_bfw"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		p:dataSource-ref="dataSource_bfw">
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
				p:database="${jpa.database}" p:showSql="${jpa.showSql}" />
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
			</props>
		</property>
		<!-- BOTH Persistence Unit and Packages to Scan are NOT compatible, persistenceUnit 
			will win -->
		<property name="persistenceUnitName" value="bw0main_bfw" />
		<property name="packagesToScan" value="th.co.toyota.st3.api.model" />
	</bean>


	<!-- Transaction manager for a single JPA EntityManagerFactory (alternative 
		to JTA) -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
		p:entityManagerFactory-ref="entityManagerFactory" primary="true"/>
		
	<bean id="transactionManager_bfw" class="org.springframework.orm.jpa.JpaTransactionManager"
		p:entityManagerFactory-ref="entityManagerFactory_bfw">
		<qualifier value="bfw" />
	</bean>			

	<!-- Let Spring create the Camel context and the Camel template, including 
		lifecycle management such as starting and stopping them -->
	<camel:camelContext id="camelContext">
		<camel:template id="camelTemplate" />
	</camel:camelContext>
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
	
	<!-- sending -->	
	<bean id="loggerST30090" class="th.co.toyota.st3.api.util.CST30000LoggerDb"
		p:moduleId="ST3200" p:functionId="ST3009" />
		
	<!-- receiving -->	
	<bean id="loggerST31250" class="th.co.toyota.st3.api.util.CST30000LoggerDb"
		p:moduleId="ST3200" p:functionId="ST3125" />
	
	<!-- odb excel download -->
	<bean id="loggerST33020" class="th.co.toyota.st3.api.util.CST30000LoggerDb"
		p:moduleId="ST3200" p:functionId="ST3302" />
		
	<bean id="loggerBBW02120" class="th.co.toyota.st3.api.util.CST30000LoggerDb"
		p:moduleId="BW02" p:functionId="BBW02120" />
		
	<bean id="loggerBBW02130" class="th.co.toyota.st3.api.util.CST30000LoggerDb"
		p:moduleId="BW02" p:functionId="BBW02130" />
		
	<bean id="loggerBBW04221" class="th.co.toyota.st3.api.util.CST30000LoggerDb"
		p:moduleId="BW04" p:functionId="LBW04221" />
		
	<bean id="batchUtil" class="th.co.toyota.bw0.batch.common.CommonBatchUtil" />
		
	<bean id="CST30000BatchManager" class="th.co.toyota.st3.api.util.CST30000BatchManager" scope="prototype" />
		
	<bean id="CST30170JasperReportConnector" class="th.co.toyota.st3.api.report.CST30170JasperReportConnector" 
		scope="prototype" p:templateFolder="${jr.template.folder}" p:destinationFolder="${jr.destination.folder}" 
		p:virtualizerFolder="${jr.virtualizer.folder}" p:virtualMaxSize="${jr.virtualMaxSize}"/>
	
	<!-- Batch -->
	<bean id="ExampleFileUploadPreprocess" class="th.co.toyota.bw0.batch.preprocess.main.ExampleFileUploadPreprocess" scope="prototype" />
	<bean id="ExampleConvertExcelToStage" class="th.co.toyota.bw0.batch.main.ExampleConvertExcelToStage" scope="prototype" />
	
	
	<!-- Batch Report or Generate ASSCII-->
	<bean id="CommonDownloadReport" class="th.co.toyota.bw0.batch.report.main.CommonDownloadReport" scope="prototype" />
	<!--START: Email -->
	<!-- In batch do not use email function
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="${email.host}" />
		<property name="defaultEncoding" value="utf-8" />
	</bean>

	<bean id="velocityEngine"
		class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="velocityProperties">
			<value>
				resource.loader=class
				class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
			</value>
		</property>
	</bean>

	<bean id="mailerVelocity" class="th.co.toyota.bw0.api.common.MailSenderVelocityImpl"
		p:encoding="utf-8" p:applicationUrl="${application.url}"
		p:mailFrom="${email.from}" p:mailFromDescription="${email.senderDescription}" p:templateLocation="${email.velocityPath}" >
		<constructor-arg index="0" ref="velocityEngine" />
		<constructor-arg index="1" ref="mailSender" />		
		<property name="senderFooter" value="System" />
		
		<property name="templateSubmitKaikiengData" value="TemplateEmailSubmitKaikiengData.vm" />
		<property name="templateRejectKaikiengData" value="TemplateEmailRejectKaikiengData.vm" />
		
	</bean>
	 -->
	<!--END: Email -->
	 
	 <!-- Common POI -->
	 <bean id="CommonPOI" class="th.co.toyota.bw0.api.common.CommonPOI" scope="prototype" />
</beans>
